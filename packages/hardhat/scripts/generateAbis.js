#!/usr/bin/env node

const fs = require("fs");
const path = require("path");

const deploymentsDir = "./deployments/liskSepolia";
const outputFile = "../nextjs/contracts/deployedContracts.ts";

console.log("🔍 Reading deployments from:", deploymentsDir);

// Check if deployments directory exists
if (!fs.existsSync(deploymentsDir)) {
  console.error("❌ Deployments directory not found:", deploymentsDir);
  process.exit(1);
}

// Get all JSON files (excluding solcInputs)
const files = fs.readdirSync(deploymentsDir).filter(f => f.endsWith(".json") && !f.includes("solcInputs"));

console.log(
  "📄 Found contracts:",
  files.map(f => f.replace(".json", "")),
);

const contracts = {};

// Process each contract
for (const file of files) {
  const name = file.replace(".json", "");
  const filePath = path.join(deploymentsDir, file);

  try {
    const data = JSON.parse(fs.readFileSync(filePath, "utf8"));
    contracts[name] = {
      address: data.address,
      abi: data.abi,
    };
    console.log(`✅ Processed ${name}: ${data.address}`);
  } catch (error) {
    console.error(`❌ Error processing ${file}:`, error.message);
  }
}

// Generate the TypeScript output
const output = `/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  4202: ${JSON.stringify(contracts, null, 2)}
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
`;

// Write output file
try {
  fs.writeFileSync(outputFile, output);
  console.log(`✅ Generated deployedContracts.ts with ${Object.keys(contracts).length} contracts`);
  console.log(`📁 Output saved to: ${outputFile}`);
} catch (error) {
  console.error("❌ Error writing output file:", error.message);
  process.exit(1);
}

console.log("🎉 ABI generation complete!");
